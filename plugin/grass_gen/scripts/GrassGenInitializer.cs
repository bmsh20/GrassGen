using Godot;
using System;


[Tool]
public partial class GrassGenInitializer : Node3D
{
    private MultiMeshInstance3D grassMultiMesh;
    private MultiMesh multiMesh;
    private GrassGenConfig config;
    
    public GrassGenInitializer(GrassGenConfig config)
    {
        this.config = config;
    }
    

    public void Initialize(Node3D parent)
    {

        if (grassMultiMesh == null)
        {
            grassMultiMesh = new MultiMeshInstance3D();
            parent.AddChild(grassMultiMesh);
            
            if (parent.GetTree().EditedSceneRoot != null)
            {
                grassMultiMesh.Owner = parent.GetTree().EditedSceneRoot;
            }
            
            multiMesh = new MultiMesh();
            grassMultiMesh.Multimesh = multiMesh;
        }
        

        multiMesh.TransformFormat = MultiMesh.TransformFormatEnum.Transform3D;
        multiMesh.UseColors = false;
        multiMesh.UseCustomData = false;
        
        multiMesh.InstanceCount = config.GrassCount;
        
        if (config.GrassMesh != null)
        {
            multiMesh.Mesh = config.GrassMesh;
            
            if (config.GrassMaterial != null)
            {
                Mesh instanceMesh = config.GrassMesh.Duplicate() as Mesh;
                instanceMesh.SurfaceSetMaterial(0, config.GrassMaterial);
                multiMesh.Mesh = instanceMesh;
            }
        }
        else
        {
            GD.PrintErr("no grass mesh - setupmultimesh");
        }
        
        grassMultiMesh.VisibilityRangeEnd = 0.0f;
    }
    

    public void UpdateInstanceCount(int count)
    {
        if (multiMesh != null)
        {
            multiMesh.InstanceCount = count;
        }
    }
    

    // receives transform data generated by GrassGenCompute.ReadTransform
    // applies it to the specified instance in the MultiMesh

    public void SetInstanceTransform(int index, Transform3D transform)
    {
        if (multiMesh != null)
        {
            multiMesh.SetInstanceTransform(index, transform);
        }
    }
    
    // if is ready, grassgendemo can proceed to gen grass
    public bool IsReady()
    {
        return multiMesh != null && config.GrassMesh != null;
    }
} 